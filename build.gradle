import org.openjfx.gradle.JavaFXPlatform

plugins {
    id 'java'
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.1.0'
    id 'org.beryx.jlink' version '3.0.1'
}

group = 'org.gosqo'
version = '1.1.0'

repositories {
    mavenCentral()
}

// No main class specified and classpath is not an executable jar.
application {
    mainModule = 'org.gosqo.tcpsocket'
    mainClass = 'org.gosqo.tcpsocket.ChatApp'
}

javafx {
    version = "17.0.7"
    modules = ['javafx.controls']
}

tasks.register('printJavafxPath') {
    doLast {
        configurations.compileClasspath.each {
            def path = it.toString()
            def lastSlashIndex = path.lastIndexOf(File.separator)
            def toPrint = path.substring(0, lastSlashIndex)

            println toPrint
        }
    }
}

jlink {
    options = [
            '--strip-debug'
            , '--compress', '2'
            , '--no-header-files'
            , '--no-man-pages'
    ]

    launcher {
        name = rootProject.name
    }

    jpackage {
        imageName = "${rootProject.name}-${project.version}"
        installerName = rootProject.name
        appVersion = project.version
    }
}

dependencies {
    testImplementation platform('org.junit:junit-bom:5.9.1')
    testImplementation 'org.junit.jupiter:junit-jupiter'
}

test {
    useJUnitPlatform()
}

configurations
        .matching(it -> it.name.contains("downloadSources"))
        .configureEach {
            attributes {
                attribute(Usage.USAGE_ATTRIBUTE, objects.named(Usage, Usage.JAVA_RUNTIME))
                attribute(OperatingSystemFamily.OPERATING_SYSTEM_ATTRIBUTE, objects.named(OperatingSystemFamily, platform.osFamily))
                attribute(MachineArchitecture.ARCHITECTURE_ATTRIBUTE, objects.named(MachineArchitecture, platform.arch))
            }
        }

def getPlatform() {
    return JavaFXPlatform.detect(osdetector);
}

ext {
    platform = getPlatform()
}
